1. Виправлено всі помилки в консолі
2. Виправлено розмір шрифтів
3. Виправлено розташування тексту
4. Прибрано зайві графічні елементи
5. Виправлено анімації при наведенні
6. Прибрано зайві margin/padding 

Додатково:
 - покращення екранної типографіки: текст сайту прогнано через типограф
 - поява навігації при клікі на бургер меню і тд.

Опис того як працює:
	- “розіграш знижки”:
	Спочатку створюється click event listener для елемента з класом "cursor-text". При натисканні на цей елемент код перевіряє, чи інший елемент з класом "wheel-img" має клас "rotated". Якщо так, то відображається елемент з класом "spin-result-wrapper". Якщо ні, то до елемента "wheel-img" додається клас "super-rotation", який запускає анімацію швидкого обертання елемента протягом 8 секунд. В css механізм дії реалізований через @-webkit-keyframes super-rotation двома кроками: на 70% - transform: rotate(1783deg), на 100% - transform: rotate(1774deg) та через стилі для цього класу: 
 - animation-name задає ім'я анімації - "super-rotation".

 - animation-duration задає тривалість анімації, у цьому випадку 7 секунд.

 - animation-fill-mode задає значення, яке має бути застосовано до елемента після завершення анімації. У цьому випадку, значення "forwards" означає, що елемент має залишатися у своєму кінцевому стані після завершення анімації.

 - transition-timing-function визначає функцію часу для переходу (transition) і анімації. Значення "ease-in-out" означає, що перехід/анімація повинні починатися повільно, прискорюватися і сповільнюватися до кінця.

	Після завершення анімації показується елемент "spin-result-wrapper" і приховується елемент "spin-wrapper", який є контейнером для колеса, що обертається. Також показується елемент з класом "order_block", та додається клас "rotated" до елемента "wheel-img", щоб запобігти повторному відтворенню анімації при наступних кліках.

	- поп-ап в правому верхньому куті:
 	Спливаюче вікно з'являється за допомогою функції setInterval(), яка запускає повторювану функцію intervalHandler через випадкові проміжки часу (від 26 до 34 секунд), отримані за допомогою функції getRandom().

	Спочатку код вибирає HTML-елементи, з якими буде здійснюватися маніпуляція за допомогою методу document.querySelector(). Цими елементами є саме вікно сповіщення та його дочірні елементи, які відображають назву, місто та кількість.

	Потім створюються два масиви, які містять можливі значення для імені та міста. Ці значення вибираються випадковим чином за допомогою функції getRandom().

	getRandom() - функція, яка генерує випадкове ціле число між двома заданими значеннями.

	Функція intervalHandler() викликається щоразу після закінчення інтервалу. Спочатку вона перевіряє, чи видно вікно сповіщення в даний момент. Якщо так, то інтервал скидається і нічого не відбувається. Якщо ні, то викликається функція createAlertMessage() для створення нового повідомлення, яке відображається у вікні попередження за допомогою функції alertShow(). Через 10 секунд вікно попередження ховається за допомогою функції alertHidden().
	
	- анімація емоджі в коментарях: 
 За допомогою @keyframes emoji-appear реалізується маштабування (scale) нового емоджі при появі.

 

